# Set the code chunks visible throughout the document
knitr::opts_chunk$set(echo = TRUE)
required_packages <- c("knitr", "tidyverse", "kableExtra", "lessR", "infer")
# Function to check if the package is installed on local environment,
# If not, install first, then load to the library
check_and_install_packages <- function(packages) {
for (pkg in packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg)
library(pkg, character.only = TRUE)
}
}
}
check_and_install_packages(required_packages)
df <- read.csv("group1.csv")
str(df)
colnames(df) <- c("gender", "age", "study_programme",
"question_1", "question_2", "question_3")
df = df[!df$gender %in% "no answer",]
df = df[!df$study_programme %in% "TU Wien",]
df <- df %>% filter(!is.na(question_1))
# check sample size
nrow(df)
for (i in (1:length(df$study_programme))){
if (grepl("Data Science", df$study_programme[i]) |
grepl("Data science", df$study_programme[i]) |
grepl("DataScience", df$study_programme[i])){
df$study_programme[i] = "Data Science MSc"
}
if (grepl("Business Informatics", df$study_programme[i])){
df$study_programme[i] = "Business Informatics MSc"
}
if (grepl("Medical", df$study_programme[i])){
df$study_programme[i] = "Medical Informatics BSc"
}
if (grepl("Mathematics / MSc", df$study_programme[i])){
df$study_programme[i] = "Mathematics MSc"
}
if (grepl("Software", df$study_programme[i])){
df$study_programme[i] = "Software & Information Engineering BSc"
}
if (grepl("Bachelor for", df$study_programme[i])){
df$study_programme[i] = "Technical Mathematics BSc"
}
if (df$age[i] < 25){
df$age[i] = "22-24"
} else if (df$age[i] >= 25 & df$age[i] < 27){
df$age[i] = "25-26"
} else if (df$age[i] >= 27 & df$age[i] < 29){
df$age[i] = "27-28"
} else if (df$age[i] >= 29){
df$age[i] = "29-57"
}
}
df$gender <- factor(df$gender, levels = c("male","female","diverse"))
df$age <- factor(df$age, levels = c("22-24","25-26","27-28","29-57"))
df$study_programme <- factor(df$study_programme,
levels = c("Medical Informatics BSc",
"Software & Information Engineering BSc",
"Technical Mathematics BSc",
"Business Informatics MSc",
"Data Science MSc",
"Mathematics MSc"))
df$question_2 <- factor(df$question_2, levels = c("Yes","No"))
#summary dataset
summary(df)
summary_gender <- df %>% group_by(gender) %>%
summarise(count = n()) %>% #total number of observations
mutate(percentage = count/sum(count) * 100)
kable(summary_gender, caption =
"Summary statistics on the gender of sample group")
# explore the answer we got for question 3
summary_q3 <- df %>% group_by(gender) %>%
summarise(
count = n(),
mean = mean(question_3),
median = median(question_3),
sd = sd(question_3)
)
kable(summary_q3, caption =
"Summary statistics on the answer to importance of environmental issues by gender")
df_q3 <- df %>% filter(gender != "diverse")
#drop the level for the factorised column
df_q3$gender <- droplevels(df_q3$gender)
str(df_q3)
summary(df_q3)
kruskal_test_q3 <- kruskal.test(question_3 ~ gender, data = df_q3)
print(kruskal_test_q3)
# chi-square test
# change answer to categorical first
df_q3_categorical <- df_q3
df_q3_categorical$question_q3 <- as.factor(df_q3_categorical$question_3)
# create a contingency table
contingency_table_q3 <- table(df_q3_categorical$gender, df_q3_categorical$question_3)
# perform chi-square test
chi_square_test_q3 <- chisq.test(contingency_table_q3)
print(chi_square_test_q3)
# perform chi-square test
chi_square_test_q3 <- chisq.test(contingency_table_q3)
print(chi_square_test_q3)
df_q3 %>%
# specify answer to q3 as response, gender as explanatory variable
specify(question_3 ~ gender) %>%
# set the hypothesis as independent to question
hypothesise(null = "independence") %>%
# permute 1000 times
generate(reps = 1000, type = "permute") %>%
# calculate the diff in means
calculate(stat = c("diff in means", "Chisq"), order = c("male", "female"))
df_q3 %>%
# specify answer to q3 as response, gender as explanatory variable
specify(question_3 ~ gender) %>%
# set the hypothesis as independent to question
hypothesise(null = "independence") %>%
# permute 1000 times
generate(reps = 1000, type = "permute") %>%
# calculate the diff in means
calculate(stat = "diff in means", order = c("male", "female"))
df_q3 %>%
# specify answer to q3 as response, gender as explanatory variable
specify(question_3 ~ gender) %>%
# set the hypothesis as independent to question
hypothesise(null = "independence") %>%
# permute 1000 times
generate(reps = 1000, type = "permute") %>%
# calculate the diff in means
calculate(stat = "Chisq", order = c("male", "female"))
df_q3_categorical %>%
# specify answer to q3 as response, gender as explanatory variable
specify(question_3 ~ gender) %>%
# set the hypothesis as independent to question
hypothesise(null = "independence") %>%
# permute 1000 times
generate(reps = 1000, type = "permute") %>%
# calculate the diff in means
calculate(stat = "Chisq", order = c("male", "female"))
summary(df_q3_categorical)
str(df_q3_categorical)
df_q3_categorical %>%
# specify answer to q3 as response, gender as explanatory variable
specify(question_3 ~ gender) %>%
# set the hypothesis as independent to question
hypothesise(null = "independence") %>%
# permute 1000 times
generate(reps = 1000, type = "permute") %>%
# calculate the diff in means
calculate(stat = "Chisq")
View(df_q3_categorical)
View(df_q3)
View(df_q3_categorical)
# chi-square test
# change answer to categorical first
df_q3$question_3_cate <- as.factor(df_q3$question_3)
View(df_q3)
# create a contingency table
contingency_table_q3 <- table(df_q3$gender, df_q3$question_3_cate)
# perform chi-square test
chi_square_test_q3 <- chisq.test(contingency_table_q3)
print(chi_square_test_q3)
df_q3 %>%
# specify answer to q3 as response, gender as explanatory variable
specify(question_3_cate ~ gender) %>%
# set the hypothesis as independent to question
hypothesise(null = "independence") %>%
# permute 1000 times
generate(reps = 1000, type = "permute") %>%
# calculate the diff in means
calculate(stat = "Chisq")
# calculate the observed statistics
obs_q3 <- df_q3 %>%
specify(question_3_cate ~ gender) %>%
calculate(stat = "Chisq")
# visualise the null distribution and observed statistic
visualize(hypothesis_q3) +
shade_p_value(obs_q3, direction = "two-sided")
# specify the hypothesis
hypothesis_q3 <- df_q3 %>%
# specify answer to q3 as response, gender as explanatory variable
specify(question_3_cate ~ gender) %>%
# set the hypothesis as independent to question
hypothesise(null = "independence") %>%
# permute 1000 times
generate(reps = 1000, type = "permute") %>%
# calculate the diff in means
calculate(stat = "Chisq")
# visualise the null distribution and observed statistic
visualize(hypothesis_q3) +
shade_p_value(obs_q3, direction = "two-sided")
# visualise the null distribution and observed statistic
visualize(hypothesis_q3) +
shade_p_value(obs_q3, direction = "greater")
# get p_value
p_value_q3 <- hypothesis_q3 %>%
get_p_value(obs_q3, direction = "greater")
print(p_value_q3)
visualize(hypothesis_q3) +
shade_p_value(obs_q3, direction = "greater")
p_value_q3
